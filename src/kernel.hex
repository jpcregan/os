0x0	; entry

	; register setup

	b8 00 00	; ax = 0x0
	b9 00 00	; cx = 0x0
	ba 00 00	; dx = 0x0
	bb 00 00	; bx = 0x0
	bc 00 10	; sp = 0x1000
	bd 00 00	; bp = 0x0
	be 00 00	; si = 0x0
	bf 00 00	; di = 0x0

	; segment registers

	b8 00 00	; ax = 0x0
	8e c0		; es = ax
	8e c8		; ss = ax
	8e d8		; ds = ax

	; set screen mode

	b8 00 00	; ax = 0x0
	cd 10		; int 0x10

	; point ds:si to string

	b8 00 01	; ax = 0x100
	8e d8		; ds = ax
	be 00 01	; si = 0x100

	; call print string

	9a 10 02 00 01	; call 0x100:0x210

	; stop

	eb fe		; jmp -0x2

0x100	; string

	"Hello, World!" 00

0x200	; print char

	50		; push ax
	53		; push bx

	b4 0e		; ah = 0xe
	b7 00		; bh = 0x0

	cd 10		; int 0x10

	5b		; pop bx
	58		; pop ax

	cb		; return

0x210	; print string

	50		; push ax
	57		; push si

	; loop

	ac		; al = [ds:si++]

	3c 00		; cmp al - 0x0
	74 07		; je end

	9a 00 02 00 01	; call print char
	eb f4		; jmp loop

	; end

	5e		; pop si
	58		; pop ax

	cb		; return

0xd00	; end
